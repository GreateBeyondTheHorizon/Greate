plugins {
    id 'dev.architectury.loom' version "1.3-SNAPSHOT"
    id 'maven-publish'
}

version = '0.0.16'
group = 'electrolyte.greate'
archivesBaseName = 'greate'

java {
    sourceCompatibility = targetCompatibility = JavaVersion.VERSION_17
}

loom {
    silentMojangMappingsLicense()

    forge {
        mixinConfigs = [
                'greate.mixin.json'
        ]
        convertAccessWideners = true
    }

    runs {
        data {
            data()
            programArgs '--all', '--mod', 'greate'
            programArgs '--output', file('src/generated/resources/').absolutePath
            programArgs '--existing', file('src/main/resources/').absolutePath
            programArgs '--existing-mod', 'create'
        }
    }
    accessWidenerPath = file('src/main/resources/greate.accesswidener')
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    mavenCentral()
    maven { url = 'https://maven.tterrag.com/'
        content {
            includeGroup "com.simibubi.create"
            includeGroup "com.jozufozu.flywheel"
            includeGroup "com.tterrag.registrate"
        }
    }
    maven { url = 'https://maven.blamejared.com'
        content {
            includeGroup "mezz.jei"
        }
    }
    maven { url = 'https://maven.architectury.dev/'
        content {
            includeGroup "dev.architectury"
        }
    }
    maven { url = 'https://maven.saps.dev/minecraft'
        content {
            includeGroup 'dev.latvian.mods'
        }
    }
    maven { url = 'https://cursemaven.com'
        content {
            includeGroup "curse.maven"
        }
    }
    maven { url = 'https://maven.firstdarkdev.xyz/snapshots'
        content {
            includeGroup 'com.lowdragmc.ldlib'
            includeGroup 'com.gregtechceu.gtceu'
            includeGroup 'dev.toma.configuration'
        }
    }
    maven { url = 'https://jitpack.io' } //mixinextras
    maven { url = 'https://maven.parchmentmc.org' }
    maven { url = 'https://maven.neoforged.net/releases' }
    maven { url = 'https://maven.quiltmc.org/repository/release/' }
}

dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    forge "net.neoforged:forge:${minecraft_version}-${forge_version}"

    mappings loom.layered {
        it.mappings("org.quiltmc:quilt-mappings:${minecraft_version}+build.${quilt_version}:intermediary-v2")
        it.parchment("org.parchmentmc.data:parchment-${minecraft_version}:${parchment_version}@zip")
        it.officialMojangMappings { nameSyntheticMembers = false }
    }

    modImplementation("com.simibubi.create:create-${minecraft_version}:${create_version}:slim") { transitive = false }
    modImplementation("com.jozufozu.flywheel:flywheel-forge-${minecraft_version}:${flywheel_version}")
    modApi("com.tterrag.registrate:Registrate:${registrate_version}")

    modCompileOnly("mezz.jei:jei-${minecraft_version}-common-api:${jei_version}") { transitive = false }
    modCompileOnly("mezz.jei:jei-${minecraft_version}-forge-api:${jei_version}") { transitive = false }
    modRuntimeOnly("mezz.jei:jei-${minecraft_version}-forge:${jei_version}") { transitive = false }

    modImplementation("dev.architectury:architectury-forge:${architectury_version}")
    modImplementation("dev.latvian.mods:rhino-forge:${rhino_version}")
    modImplementation("dev.latvian.mods:kubejs-forge:${kubejs_version}")
    modImplementation("dev.latvian.mods:kubejs-create-forge:${kubejs_create_version}")

    modApi("com.lowdragmc.ldlib:ldlib-forge-${minecraft_version}:${ldlib_version}") { transitive = false }
    modImplementation("com.gregtechceu.gtceu:gtceu-${minecraft_version}:${gregtech_version}") { transitive = false }
    modApi("dev.toma.configuration:configuration-forge-${minecraft_version}:${configuration_version}")

    modRuntimeOnly("curse.maven:jade-324717:${jade_version}")
    modRuntimeOnly("curse.maven:spark-361579:${spark_version}")

    implementation(annotationProcessor("io.github.llamalad7:mixinextras-common:0.3.2"))
    api(include("io.github.llamalad7:mixinextras-forge:0.3.2"))
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "greate",
                "Specification-Vendor"    : "electrolyte",
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "electrolyte",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
        ])
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    options.release = 17
}
