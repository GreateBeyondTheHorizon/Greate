plugins {
    id 'fabric-loom' version '1.3-SNAPSHOT'
    id 'maven-publish'
    id 'java'
}

version = 'fabric-0.0.5'
group = 'electrolyte.greate'
archivesBaseName = 'greate'

loom {
    runs {
        datagenClient {
            inherit client
            name "Datagen"
            vmArg "-Dfabric-api.datagen"
            vmArg "-Dfabric-api.datagen.output-dir=${file("src/generated")}"
            vmArg "-Dfabric-api.datagen.modid=greate"
            vmArg "-Dporting_lib.datagen.existing_resources=${file("src/main/resources")}"

            runDir "build/datagen"
        }
    }
    mods {
        "greate" {
            sourceSet sourceSets.main
        }
    }
}

sourceSets {
    main {
        resources {
            srcDirs += [
                    'src/generated'
            ]
        }
    }
}

repositories {
    flatDir {
        dir 'libs'
    }
    maven { url = "https://mvn.devos.one/snapshots/" } //Create fabric & dependencies
    maven { url = "https://maven.jamieswhiteshirt.com/libs-release" } // Reach Entity Attributes
    maven { url = 'https://maven.blamejared.com'
        content {
            includeGroup "mezz.jei"
        }
    }
    maven {
        url = 'https://maven.tterrag.com'
        content {
            includeGroup "com.jozufozu.flywheel"
        }
    }
    maven { url = 'https://maven.saps.dev/minecraft'
        content {
            includeGroup 'dev.latvian.mods'
        }
    }
    maven { url = 'https://cursemaven.com'
        content {
            includeGroup "curse.maven"
        }
    }
    maven { url = 'https://jitpack.io' } //mixinextras (kubejs dep.)
    maven { url = 'https://maven.parchmentmc.org' }
    maven { url = "https://maven.architectury.dev/" }
}

dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings loom.layered() {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-${minecraft_version}:${parchment_version}@zip")
    }

    modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_api_version}+${minecraft_version}"

    modImplementation ("com.simibubi.create:create-fabric-${minecraft_version}:${create_version}+mc${minecraft_version}")

    modCompileOnly ("mezz.jei:jei-${minecraft_version}-common-api:${jei_version}")
    modCompileOnly ("mezz.jei:jei-${minecraft_version}-fabric-api:${jei_version}")
    modImplementation ("mezz.jei:jei-${minecraft_version}-fabric:${jei_version}")
    modImplementation "dev.latvian.mods:rhino-fabric:${rhino_version}"
    modImplementation "dev.latvian.mods:kubejs-fabric:${kubejs_version}"
    modImplementation "curse.maven:ldlib-626676:${ldlib_version}"
    modImplementation "curse.maven:configuration-444699:${configuration_version}"
    modImplementation "curse.maven:gregtechceu-modern-890405:${gregtech_version}"
    modRuntimeOnly "curse.maven:jade-324717:${jade_version}"
    modRuntimeOnly "curse.maven:spark-361579:${spark_version}"
}

java {
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility JavaVersion.VERSION_17
}

jar {
    from("LICENSE") {
        rename { "${it}_greate"}
    }
}


publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}
tasks.withType(JavaCompile).configureEach {
    it.options.release = 17
}
